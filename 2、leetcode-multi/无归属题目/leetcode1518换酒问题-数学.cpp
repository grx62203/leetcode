/*
小区便利店正在促销，用 `numExchange` 个空酒瓶可以兑换一瓶新酒。你购入了 `numBottles` 瓶酒。

如果喝掉了酒瓶中的酒，那么酒瓶就会变成空的。

请你计算 **最多** 能喝到多少瓶酒。
*/
这这这 不就是我们小学二年级学过的 “借酒瓶” 的奥数题嘛？ 甚至还是简化版，直接推导一下。

每e个酒瓶可以换1个酒瓶；那其实相当于每减少e-1瓶酒，就可以换喝一瓶酒。 那一共能换多少呢是不是就是 n/(e-1) 瓶？
但这有个前提，就是最后至少得有e瓶酒才可以兑换，所以如果最后只剩e-1瓶酒的时候我们就不能换了。
在小学奥数题里我们可以通过借酒瓶解决这个问题。

为了处理这个问题，我们应该 用 (n-1)/(e-1) 这样最后只剩 e-1 瓶酒的时候，就不足以被 e-1 整除而多兑换一次了。

class Solution {
public:
    int numWaterBottles(int n, int e) {
        return n + (n - 1) / (e - 1);
    }
};
