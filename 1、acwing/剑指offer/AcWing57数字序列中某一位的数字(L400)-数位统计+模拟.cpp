/*
数字以 0123456789101112131415… 的格式序列化到一个字符序列中。

在这个序列中，第 5 位（从 0 开始计数）是 5，第 13 位是 1，第 19 位是 4，等等。

请写一个函数求任意位对应的数字。

数据范围
0≤ 输入数字 ≤2147483647
样例
输入：13

输出：1
*/
class Solution {
public:
	//首先统计这个数是几位数，之后统计是几位数的第几个数，最后统计第几位输出即可，
    int digitAtIndex(int n) {
        long long i = 1,num = 9,base = 1;
        //依次排除n所处范围，1*9=1位数、2*90=2位数、3*900=3位数、、、
        while(n > i * num){
        	//减去i位的所有位置和
            n -= i * num;
            i ++;
            num *= 10;
            //i+1位的第一个位置
            base *= 10;
        }
        //计算i位数中的第几个数
        int number = base + (n + i - 1) / i - 1;//(n + i - 1) / i 表示 n/i上取整  
        //计算i位数中的第几个数的第几位数字，余数为0便是第i位
        int r = n % i ? n % i : i;
        //用真正的这个数来找到第r位数字
        //23456 r=2代表就是3，遍历j=0到j<3，也就是
        //23456/10=2345
        //2345/10=234
        //234/10=23
        //返回23%10=3
        for(int j = 0; j < i - r; j ++) number /= 10;
        return number % 10;
    }
};
