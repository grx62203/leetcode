/*
在一个数组中除了一个数字只出现一次之外，其他数字都出现了三次。

请找出那个只出现一次的数字。

你可以假设满足条件的数字一定存在。

思考题：

如果要求只使用 O(n) 的时间和额外 O(1) 的空间，该怎么做呢？
数据范围
数组长度 [1,1500]。

样例
输入：[1,1,1,2,2,2,3,4,4,4]

输出：3
*/


//基本款
//leetcode
/*
ab=00，代表当前位%3的余数是0
ab=00，代表当前位%3的余数是0
ab=00，代表当前位%3的余数是0

ab      某个数的某一位  新a新的b
00   	0	           00
00   	1	           01
01   	0	           01
01   	1	           10
10   	0	           10
10   	1	           00

由上可得：

a = (~a & b & x) | (a & ~b & ~x)
b = ~a & (b ˆ x)
*/
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int a = 0, b = 0;
        for (int num: nums) {
            tie(a, b) = pair{(~a & b & num) | (a & ~b & ~num), ~a & (b ^ num)};
        }
        return b;
    }
};
